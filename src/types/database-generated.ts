/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Memories {
  access_count: Generated<number | null>;
  accessed_at: Timestamp | null;
  cluster_id: string | null;
  confidence: number;
  content: Json;
  content_hash: string;
  created_at: Generated<Timestamp>;
  decay_rate: Generated<number | null>;
  decay_score: Generated<number | null>;
  deleted_at: Timestamp | null;
  embedding: string | null;
  embedding_dimension: number | null;
  id: Generated<string>;
  importance_score: Generated<number | null>;
  is_compressed: Generated<boolean>;
  last_decay_update: Generated<Timestamp | null>;
  metadata: Json | null;
  parent_id: string | null;
  relation_type: string | null;
  similarity_threshold: Generated<number | null>;
  source: string;
  state: Generated<string | null>;
  tags: Generated<string[] | null>;
  type: string;
  updated_at: Generated<Timestamp>;
  user_context: string;
}

export interface MemoryRelations {
  created_at: Generated<Timestamp>;
  from_memory_id: string;
  id: Generated<string>;
  relation_type: string;
  strength: number;
  to_memory_id: string;
}

export interface DB {
  memories: Memories;
  memory_relations: MemoryRelations;
}
